{"mappings":"AAAA;AAEA,sBAAsB;AACtB,MAAM,aAAa,SAAS,iBAAiB;AAE7C,MAAM,UAAU,SAAU,OAAO,EAAE,QAAQ;IACzC,MAAM,CAAC,MAAM,GAAG;IAEhB,IAAI,CAAC,MAAM,gBAAgB;IAE3B,4BAA4B;IAC5B,MAAM,OAAO,MAAM,MAAM,OAAO,QAAQ;IAExC,MAAM,OAAO,iBAAiB,QAAQ;QACpC,MAAM,OAAO,UAAU,OAAO;IAChC;IAEA,SAAS,UAAU,MAAM;AAC3B;AAEA,MAAM,cAAc,IAAI,qBAAqB,SAAS;IACpD,MAAM;IACN,WAAW;IACX,YAAY;AACd;AAEA,WAAW,QAAQ,CAAA,MAAO,YAAY,QAAQ","sources":["src/Js/script.js"],"sourcesContent":["'use strict';\r\n\r\n// Lazy loading images\r\nconst imgTargets = document.querySelectorAll('img[data-src]');\r\n\r\nconst loadImg = function (entries, observer) {\r\n  const [entry] = entries;\r\n\r\n  if (!entry.isIntersecting) return;\r\n\r\n  // Replace src with data-src\r\n  entry.target.src = entry.target.dataset.src;\r\n\r\n  entry.target.addEventListener('load', function () {\r\n    entry.target.classList.remove('lazy-img');\r\n  });\r\n\r\n  observer.unobserve(entry.target);\r\n};\r\n\r\nconst imgObserver = new IntersectionObserver(loadImg, {\r\n  root: null,\r\n  threshold: 0,\r\n  rootMargin: '200px',\r\n});\r\n\r\nimgTargets.forEach(img => imgObserver.observe(img));\r\n"],"names":[],"version":3,"file":"crew-commander.c4546ecb.js.map","sourceRoot":"/__parcel_source_root/"}